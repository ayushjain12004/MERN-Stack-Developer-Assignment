{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n      // previous mode = new mode \n    },\n\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"user friend not existent\");\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPosts = state.posts.map(post => {\n        if (post._id === action.payload.post._id) return action.payload.post;\n        //for replacing that single post and keeping all pther posts the same\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatedPosts","map","post","_id","actions","reducer"],"sources":["C:/Users/lenov/Downloads/Job-Assignment-Friend-finder-main/Job-Assignment-Friend-finder-main/frontend/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"; \n\nconst initialState ={\n    mode:\"light\",\n    user:null,\n    token:null,\n    posts:[],\n};\n \nexport const authSlice = createSlice({\n    name:\"auth\",\n    initialState,\n    reducers:{\n        setMode:(state)=>{\n            state.mode=state.mode===\"light\"?\"dark\":\"light\";\n            // previous mode = new mode \n        },\n        setLogin:(state,action)=>{\n            state.user=action.payload.user;\n            state.token=action.payload.token;\n        },\n        setLogout: (state)=>{\n            state.user=null;\n            state.token=null;\n        },\n        setFriends:(state,action)=>{\n            if(state.user){\n                state.user.friends=action.payload.friends;\n            }else{\n                console.error(\"user friend not existent\");\n            }\n        },\n        setPosts:(state,action)=>{\n            state.posts=action.payload.posts;\n        },\n        setPost:(state,action)=>{\n            const updatedPosts = state.posts.map((post)=>{\n                if(post._id===action.payload.post._id) return action.payload.post;\n                //for replacing that single post and keeping all pther posts the same\n                return post;\n            });\n            state.posts=updatedPosts\n        }\n    }\n})\n\nexport const {\n    setMode,setLogin,setLogout,setFriends,setPosts,setPost\n} = authSlice.actions;\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAE;EAChBC,IAAI,EAAC,OAAO;EACZC,IAAI,EAAC,IAAI;EACTC,KAAK,EAAC,IAAI;EACVC,KAAK,EAAC;AACV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAC,MAAM;EACXN,YAAY;EACZO,QAAQ,EAAC;IACLC,OAAO,EAAEC,KAAK,IAAG;MACbA,KAAK,CAACR,IAAI,GAACQ,KAAK,CAACR,IAAI,KAAG,OAAO,GAAC,MAAM,GAAC,OAAO;MAC9C;IACJ,CAAC;;IACDS,QAAQ,EAACA,CAACD,KAAK,EAACE,MAAM,KAAG;MACrBF,KAAK,CAACP,IAAI,GAACS,MAAM,CAACC,OAAO,CAACV,IAAI;MAC9BO,KAAK,CAACN,KAAK,GAACQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAG;MAChBA,KAAK,CAACP,IAAI,GAAC,IAAI;MACfO,KAAK,CAACN,KAAK,GAAC,IAAI;IACpB,CAAC;IACDW,UAAU,EAACA,CAACL,KAAK,EAACE,MAAM,KAAG;MACvB,IAAGF,KAAK,CAACP,IAAI,EAAC;QACVO,KAAK,CAACP,IAAI,CAACa,OAAO,GAACJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC7C,CAAC,MAAI;QACDC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACJ,CAAC;IACDC,QAAQ,EAACA,CAACT,KAAK,EAACE,MAAM,KAAG;MACrBF,KAAK,CAACL,KAAK,GAACO,MAAM,CAACC,OAAO,CAACR,KAAK;IACpC,CAAC;IACDe,OAAO,EAACA,CAACV,KAAK,EAACE,MAAM,KAAG;MACpB,MAAMS,YAAY,GAAGX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAG;QACzC,IAAGA,IAAI,CAACC,GAAG,KAAGZ,MAAM,CAACC,OAAO,CAACU,IAAI,CAACC,GAAG,EAAE,OAAOZ,MAAM,CAACC,OAAO,CAACU,IAAI;QACjE;QACA,OAAOA,IAAI;MACf,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAACgB,YAAY;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTZ,OAAO;EAACE,QAAQ;EAACG,SAAS;EAACC,UAAU;EAACI,QAAQ;EAACC;AACnD,CAAC,GAAGd,SAAS,CAACmB,OAAO;AAErB,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
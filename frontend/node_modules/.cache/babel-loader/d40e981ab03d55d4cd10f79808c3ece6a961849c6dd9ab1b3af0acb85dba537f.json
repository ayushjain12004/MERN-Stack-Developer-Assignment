{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenov\\\\Downloads\\\\Job-Assignment-Friend-finder-main\\\\Job-Assignment-Friend-finder-main\\\\frontend\\\\src\\\\scenes\\\\widgets\\\\PostsWidget.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = _ref => {\n  _s();\n  let {\n    userId,\n    isProfile = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const getPosts = async () => {\n    const response = await fetch(\"http://localhost:6001/posts\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    const posts = await data.reverse();\n    // console.log(posts);\n    dispatch(setPosts({\n      posts: posts\n    }));\n  };\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:6001/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    const posts = await data.reverse();\n    // console.log(posts);\n    dispatch(setPosts({\n      posts: posts\n    }));\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []);\n  // const revPosts= posts.reverse();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(_ref2 => {\n      let {\n        _id,\n        userId,\n        firstName,\n        lastName,\n        description,\n        location,\n        picturePath,\n        userPicturePath,\n        likes,\n        comments\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(PostWidget, {\n        postId: _id,\n        postUserId: userId,\n        name: `${firstName} ${lastName}`,\n        description: description,\n        location: location,\n        picturePath: picturePath,\n        userPicturePath: userPicturePath,\n        likes: likes,\n        comments: comments\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","_ref","_s","userId","isProfile","dispatch","posts","state","token","getPosts","response","fetch","method","headers","Authorization","data","json","reverse","getUserPosts","children","map","_ref2","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","postId","postUserId","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenov/Downloads/Job-Assignment-Friend-finder-main/Job-Assignment-Friend-finder-main/frontend/src/scenes/widgets/PostsWidget.jsx"],"sourcesContent":["import React from 'react'\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\n\nconst PostsWidget = ({userId,isProfile=false}) => {\n    const dispatch=useDispatch();\n    const posts = useSelector((state)=>state.posts);\n    const token = useSelector((state) => state.token);\n\n    const getPosts = async()=>{\n        const response = await fetch(\"http://localhost:6001/posts\",{\n            method:\"GET\",\n            headers:{Authorization:`Bearer ${token}`},\n        })\n        const data = await response.json();\n        const posts = await data.reverse();\n        // console.log(posts);\n        dispatch(setPosts({posts:posts}))\n    }\n\n    const getUserPosts = async()=>{\n        const response = await fetch(`http://localhost:6001/posts/${userId}/posts`,{\n            method:\"GET\",\n            headers:{Authorization:`Bearer ${token}`},\n        })\n        const data = await response.json();\n        const posts = await data.reverse();\n        // console.log(posts);\n        dispatch(setPosts({posts:posts}))\n    }\n\n    useEffect(()=>{\n        if(isProfile){\n            getUserPosts();\n        }else{\n            getPosts();\n        }\n    },[]);\n    // const revPosts= posts.reverse();\n\n  return (\n    <>\n     {\n        posts.map(\n            ({\n                _id,\n                userId,\n                firstName,\n                lastName,\n                description,\n                location,\n                picturePath,\n                userPicturePath,\n                likes,\n                comments,\n              })=>(\n                <PostWidget\n                  key={_id}\n                  postId={_id}\n                  postUserId={userId}\n                  name={`${firstName} ${lastName}`}\n                  description={description}\n                  location={location}\n                  picturePath={picturePath}\n                  userPicturePath={userPicturePath}\n                  likes={likes}\n                  comments={comments}\n                />\n              )\n        )\n     }\n    </>\n  )\n}\n\nexport default PostsWidget"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}